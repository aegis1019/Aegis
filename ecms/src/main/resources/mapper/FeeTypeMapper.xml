<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jtxx.fund.dao.FeeTypeDao">

    <resultMap id="BaseResultMap" type="com.jtxx.entity.FeeType">
        <result column="FEE_TYPE_ID" property="ID" jdbcType="VARCHAR" />
        <result column="FEE_TYPE_ID" property="FeeTypeID" jdbcType="VARCHAR" />
        <result column="NAME" property="Name" jdbcType="VARCHAR" />
        <result column="SORT" property="Sort" jdbcType="DECIMAL" />
        <result column="REMARK" property="Remark" jdbcType="VARCHAR" />
        <result column="PARENT_ID" property="ParentID" jdbcType="VARCHAR" />
        <result column="IS_LEAF" property="IsLeaf" jdbcType="VARCHAR" />

    </resultMap>

    <select id="selectByParID" resultMap="BaseResultMap">
        select * from FEETYPE
        where fee_type_id != #{ParId, jdbcType=VARCHAR } and parent_id = #{ParId, jdbcType=VARCHAR }
        start with fee_type_id = #{ParId, jdbcType=VARCHAR } connect by prior fee_type_id = parent_id
        order by sort
    </select>

    <select id="countByParID" resultType="java.lang.Integer">
        select count(*) from FEETYPE
        where fee_type_id != #{ParId, jdbcType=VARCHAR } and parent_id = #{ParId, jdbcType=VARCHAR }
        start with fee_type_id = #{ParId, jdbcType=VARCHAR } connect by prior fee_type_id = parent_id
    </select>

    <select id="selectByID" resultMap="BaseResultMap">
        select * from FEETYPE where fee_type_id = #{FeeTypeID, jdbcType=VARCHAR}
    </select>

    <insert id="insert">
        insert into FEETYPE (FEE_TYPE_ID,NAME,SORT,REMARK,PARENT_ID,IS_LEAF)
        values
        (#{feetype.ID, jdbcType=VARCHAR},#{feetype.Name, jdbcType=VARCHAR},
         #{feetype.Sort, jdbcType=VARCHAR},#{feetype.Remark, jdbcType=VARCHAR},
         #{feetype.ParentID, jdbcType=VARCHAR},#{feetype.IsLeaf, jdbcType=VARCHAR}
        )
    </insert>

    <delete id="deleteByID">
        delete from feetype where fee_type_id = #{feetype.FeeTypeID, jdbcType=VARCHAR}
    </delete>

    <update id="updateById">
        update FEETYPE SET
        NAME = #{feetype.Name, jdbcType=VARCHAR},
        SORT = #{feetype.Sort, jdbcType=VARCHAR},
        REMARK = #{feetype.Remark, jdbcType=VARCHAR},
        PARENT_ID = #{feetype.ParentID, jdbcType=VARCHAR}
        where
        fee_type_id = #{feetype.FeeTypeID, jdbcType=VARCHAR}
    </update>

    <select id="isChild" resultType="java.lang.Integer" >
        select count(*) from feetype
        where fee_type_id = #{feeTypeId, jdbcType=VARCHAR}
        and IS_LEAF = 'Y'
    </select>

    <update id="modifyLeafStatus">
        update feetype set IS_LEAF = 'N'
        WHERE
        fee_type_id = #{feeTypeId, jdbcType=VARCHAR}
        and IS_LEAF = 'Y'
    </update>

    <update id="modifyLeafStatus2">
        update feetype set IS_LEAF = 'Y'
        WHERE
        fee_type_id = #{feeTypeId, jdbcType=VARCHAR}
        and IS_LEAF = 'N'
    </update>

    <select id="getFeeTypeForTree" resultMap="BaseResultMap" >
        select * from FEETYPE
        where fee_type_id != #{ParId, jdbcType=VARCHAR }
        start with fee_type_id = #{ParId, jdbcType=VARCHAR } connect by prior fee_type_id = parent_id
        order by parent_id,sort

    </select>

</mapper>